{"_raw":"{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"description\": \"The HTTP API for Event Store\",\n    \"version\": \"4.0.2\",\n    \"title\": \"HTTP API\",\n    \"contact\": {\n      \"email\": \"you@your-company.com\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    }\n  },\n  \"host\": \"eventstore.org\",\n  \"schemes\": [\n    \"https\"\n  ],\n  \"paths\": {\n    \"/streams/{stream}\": {\n      \"get\": {\n        \"summary\": \"Reads a stream\",\n        \"tags\": [\n          \"Streams\"\n        ],\n        \"description\": \"Read a stream, receiving a standard AtomFeed document as a response.\",\n        \"operationId\": \"readStream\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"stream\",\n            \"in\": \"path\",\n            \"description\": \"The stream ID\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"embed\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"enum\": [\n              \"None\",\n              \"Content\",\n              \"Rich\",\n              \"Body\",\n              \"PrettyBody\",\n              \"TryHarder\"\n            ]\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"404\": {\n            \"description\": \"Not found\"\n          }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Create a stream\",\n        \"tags\": [\n          \"Streams\"\n        ],\n        \"description\": \"Create a new stream.\",\n        \"operationId\": \"createStream\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"stream\",\n            \"in\": \"path\",\n            \"description\": \"The name of the new stream\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"in\": \"body\",\n            \"name\": \"streamItem\",\n            \"description\": \"Stream to create\",\n            \"required\": false,\n            \"schema\": {\n              \"$ref\": \"#/definitions/StreamItem\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"201\": {\n            \"description\": \"New stream created\"\n          },\n          \"307\": {\n            \"description\": \"Temporary Redirect\"\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Deletes a stream\",\n        \"tags\": [\n          \"Streams\"\n        ],\n        \"description\": \"Delete specified stream\",\n        \"operationId\": \"deleteStream\",\n        \"produces\": [\n          \"application/xml\",\n          \"application/json\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"stream\",\n            \"in\": \"path\",\n            \"description\": \"The stream ID to delete\",\n            \"required\": true,\n            \"type\": \"string\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Stream deleted\"\n          }\n        }\n      }\n    },\n    \"/streams/{stream}/incoming/{guid}\": {\n      \"post\": {\n        \"tags\": [\n          \"Streams\"\n        ],\n        \"summary\": \"An alternative URL to post events to\",\n        \"description\": \"A URL generated by Event Store if you don't supply an ID when creating a stream. You then use this URL to post events to.\",\n        \"operationId\": \"incomingUrl\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"stream\",\n            \"in\": \"path\",\n            \"description\": \"The name of the stream\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"guid\",\n            \"in\": \"path\",\n            \"description\": \"Autogenerated UUID\",\n            \"required\": true,\n            \"type\": \"string\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"New event created\"\n          },\n          \"400\": {\n            \"description\": \"Bad request\"\n          }\n        }\n      }\n    },\n    \"/streams/{stream}/{event}\": {\n      \"get\": {\n        \"tags\": [\n          \"Streams\"\n        ],\n        \"summary\": \"Read a stream event\",\n        \"description\": \"Reads a single event from a stream.\",\n        \"operationId\": \"readSingleStreamEvent\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"stream\",\n            \"in\": \"path\",\n            \"description\": \"The stream ID\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"event\",\n            \"in\": \"path\",\n            \"description\": \"The event ID\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"embed\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"enum\": [\n              \"None\",\n              \"Content\",\n              \"Rich\",\n              \"Body\",\n              \"PrettyBody\",\n              \"TryHarder\"\n            ]\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"404\": {\n            \"description\": \"Not found\"\n          }\n        }\n      }\n    },\n    \"/streams/{stream}/{event}/{count}\": {\n      \"get\": {\n        \"tags\": [\n          \"Streams\"\n        ],\n        \"summary\": \"Paginate backwards through stream events\",\n        \"description\": \"Paginate backwards though stream events by a specified amount.\",\n        \"operationId\": \"getSpecifiedStreamEvents\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"stream\",\n            \"in\": \"path\",\n            \"description\": \"The stream ID\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"event\",\n            \"in\": \"path\",\n            \"description\": \"The event ID\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"count\",\n            \"in\": \"path\",\n            \"description\": \"How many events to skip backwards from in the request.\",\n            \"required\": true,\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          {\n            \"name\": \"embed\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"enum\": [\n              \"None\",\n              \"Content\",\n              \"Rich\",\n              \"Body\",\n              \"PrettyBody\",\n              \"TryHarder\"\n            ]\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"404\": {\n            \"description\": \"Not found\"\n          }\n        }\n      }\n    },\n    \"/streams/{stream}/{event}/backward/{count}\": {\n      \"get\": {\n        \"tags\": [\n          \"Streams\"\n        ],\n        \"summary\": \"Paginate backwards through stream events\",\n        \"description\": \"Paginate backwards though stream events by a specified amount.\",\n        \"operationId\": \"pageBackwardsStreamEvents\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"stream\",\n            \"in\": \"path\",\n            \"description\": \"The stream ID\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"event\",\n            \"in\": \"path\",\n            \"description\": \"The event ID\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"count\",\n            \"in\": \"path\",\n            \"description\": \"How many events to skip backwards from in the request.\",\n            \"required\": true,\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          {\n            \"name\": \"embed\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"enum\": [\n              \"None\",\n              \"Content\",\n              \"Rich\",\n              \"Body\",\n              \"PrettyBody\",\n              \"TryHarder\"\n            ]\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"404\": {\n            \"description\": \"Not found\"\n          }\n        }\n      }\n    },\n    \"/streams/{stream}/{event}/forward/{count}\": {\n      \"get\": {\n        \"tags\": [\n          \"Streams\"\n        ],\n        \"summary\": \"Paginate forwards through stream events\",\n        \"description\": \"Paginate forwards though stream events by a specified amount.\",\n        \"operationId\": \"pageForwardsStreamEvents\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"stream\",\n            \"in\": \"path\",\n            \"description\": \"The stream ID\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"event\",\n            \"in\": \"path\",\n            \"description\": \"The event ID\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"count\",\n            \"in\": \"path\",\n            \"description\": \"How many events to skip forwards in the request.\",\n            \"required\": true,\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          {\n            \"name\": \"embed\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"enum\": [\n              \"None\",\n              \"Content\",\n              \"Rich\",\n              \"Body\",\n              \"PrettyBody\",\n              \"TryHarder\"\n            ]\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"404\": {\n            \"description\": \"Not found\"\n          }\n        }\n      }\n    },\n    \"/streams/{stream}/metadata\": {\n      \"get\": {\n        \"tags\": [\n          \"Streams\"\n        ],\n        \"summary\": \"Reads the metadata of a stream\",\n        \"description\": \"Returns metadata of a stream, typically information associated with an event that is not part of the event.\",\n        \"operationId\": \"readStreamMetadata\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"stream\",\n            \"in\": \"path\",\n            \"description\": \"The stream ID\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"embed\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"enum\": [\n              \"None\",\n              \"Content\",\n              \"Rich\",\n              \"Body\",\n              \"PrettyBody\",\n              \"TryHarder\"\n            ]\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"Streams\"\n        ],\n        \"summary\": \"Update stream metadata\",\n        \"description\": \"Update the metadata of a stream.\",\n        \"operationId\": \"updateStreamMetadata\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"stream\",\n            \"in\": \"path\",\n            \"description\": \"The name of the stream\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"in\": \"body\",\n            \"name\": \"streamMetadataItem\",\n            \"description\": \"Metadata object\",\n            \"required\": false,\n            \"schema\": {\n              \"$ref\": \"#/definitions/StreamMetadataItem\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"201\": {\n            \"description\": \"New stream created\"\n          },\n          \"400\": {\n            \"description\": \"Bad request\"\n          }\n        }\n      }\n    },\n    \"/streams/$all\": {\n      \"get\": {\n        \"tags\": [\n          \"Streams\"\n        ],\n        \"summary\": \"Returns all events from all streams\",\n        \"description\": \"Returns all events from all streams, you must provide user details.\",\n        \"operationId\": \"readAll\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"embed\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"enum\": [\n              \"None\",\n              \"Content\",\n              \"Rich\",\n              \"Body\",\n              \"PrettyBody\",\n              \"TryHarder\"\n            ]\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"404\": {\n            \"description\": \"Not found\"\n          }\n        }\n      }\n    },\n    \"/subscriptions\": {\n      \"get\": {\n        \"tags\": [\n          \"Subscriptions\"\n        ],\n        \"summary\": \"Get information for all subscriptions\",\n        \"description\": \"Returns all subscriptions from all streams.\",\n        \"operationId\": \"readAllSubscriptions\",\n        \"produces\": [\n          \"application/vnd.eventstore.competingatom+json\",\n          \"application/vnd.eventstore.competingatom+xml\"\n        ],\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"New persistant subscription\"\n          },\n          \"400\": {\n            \"description\": \"bad input parameter\"\n          }\n        }\n      }\n    },\n    \"/subscriptions/{stream}\": {\n      \"get\": {\n        \"tags\": [\n          \"Subscriptions\"\n        ],\n        \"summary\": \"Returns stream information\",\n        \"description\": \"Needed\",\n        \"operationId\": \"streamInformation\",\n        \"produces\": [\n          \"application/vnd.eventstore.competingatom+json\",\n          \"application/vnd.eventstore.competingatom+xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"stream\",\n            \"in\": \"path\",\n            \"description\": \"The stream name\",\n            \"required\": true,\n            \"type\": \"string\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/subscriptions/{stream}/{subscription}/info\": {\n      \"get\": {\n        \"tags\": [\n          \"Subscriptions\"\n        ],\n        \"summary\": \"Reads stream information via a persistent subscription\",\n        \"description\": \"Needed\",\n        \"operationId\": \"readSubscriptionInformation\",\n        \"produces\": [\n          \"application/vnd.eventstore.competingatom+json\",\n          \"application/vnd.eventstore.competingatom+xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"stream\",\n            \"in\": \"path\",\n            \"description\": \"The stream the persistent subscription is on\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"subscription\",\n            \"in\": \"path\",\n            \"description\": \"The name of the subscription group\",\n            \"required\": true,\n            \"type\": \"string\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/subscriptions/{stream}/{subscription}\": {\n      \"get\": {\n        \"tags\": [\n          \"Subscriptions\"\n        ],\n        \"summary\": \"Read a stream\",\n        \"description\": \"Read a specified stream by a persistent subscription.\",\n        \"operationId\": \"readSubscription\",\n        \"produces\": [\n          \"application/vnd.eventstore.competingatom+json\",\n          \"application/vnd.eventstore.competingatom+xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"stream\",\n            \"in\": \"path\",\n            \"description\": \"The stream the persistent subscription is on\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"subscription\",\n            \"in\": \"path\",\n            \"description\": \"The name of the subscription group\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"embed\",\n            \"in\": \"query\",\n            \"description\": \"Needed\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"enum\": [\n              \"None\",\n              \"Content\",\n              \"Rich\",\n              \"Body\",\n              \"PrettyBody\",\n              \"TryHarder\"\n            ]\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"Subscriptions\"\n        ],\n        \"summary\": \"Update a persistant subscription\",\n        \"description\": \"You can edit the settings of an existing subscription while it is running. This will drop the current subscribers and will reset the subscription internally.\",\n        \"operationId\": \"updateSubscription\",\n        \"produces\": [\n          \"application/vnd.eventstore.competingatom+json\",\n          \"application/vnd.eventstore.competingatom+xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"stream\",\n            \"in\": \"path\",\n            \"description\": \"The stream the persistent subscription is on\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"subscription\",\n            \"in\": \"path\",\n            \"description\": \"The name of the subscription group\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"in\": \"body\",\n            \"name\": \"subscriptionItem\",\n            \"description\": \"Subscription to create\",\n            \"required\": false,\n            \"schema\": {\n              \"$ref\": \"#/definitions/SubscriptionItem\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Subscription updated\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"Subscriptions\"\n        ],\n        \"summary\": \"Create a persistant subscription\",\n        \"description\": \"Before interacting with a subscription group, you need to create one. You will receive an error if you attempt to create a subscription group more than once. This requires [admin permissions](/server/access-control-lists).\",\n        \"operationId\": \"createSubscription\",\n        \"produces\": [\n          \"application/vnd.eventstore.competingatom+json\",\n          \"application/vnd.eventstore.competingatom+xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"stream\",\n            \"in\": \"path\",\n            \"description\": \"The stream the persistent subscription is on\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"subscription\",\n            \"in\": \"path\",\n            \"description\": \"The name of the subscription group\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"in\": \"body\",\n            \"name\": \"subscriptionItem\",\n            \"description\": \"Subscription to create\",\n            \"required\": false,\n            \"schema\": {\n              \"$ref\": \"#/definitions/SubscriptionItem\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Subscription created\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Subscriptions\"\n        ],\n        \"summary\": \"Deletes a subscription\",\n        \"description\": \"\",\n        \"operationId\": \"deleteSubscription\",\n        \"produces\": [\n          \"application/vnd.eventstore.competingatom+json\",\n          \"application/vnd.eventstore.competingatom+xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"stream\",\n            \"in\": \"path\",\n            \"description\": \"The stream the persistent subscription is on\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"subscription\",\n            \"in\": \"path\",\n            \"description\": \"The name of the subscription group\",\n            \"required\": true,\n            \"type\": \"string\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/subscriptions/{stream}/{subscription}/{count}\": {\n      \"get\": {\n        \"tags\": [\n          \"Subscriptions\"\n        ],\n        \"summary\": \"Reads a stream via a persistent subscription and return a specific number of events\",\n        \"description\": \"By default, reading a stream via a persistent subscription will return a single event per request and will not embed the event properties as part of the response. Read [Reading Streams]({{site.baseurl}}/http-api/reading-streams) for information on the different embed levels.\",\n        \"operationId\": \"readSubscriptionWithCount\",\n        \"produces\": [\n          \"application/vnd.eventstore.competingatom+json\",\n          \"application/vnd.eventstore.competingatom+xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"stream\",\n            \"in\": \"path\",\n            \"description\": \"The stream the persistent subscription is on\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"subscription\",\n            \"in\": \"path\",\n            \"description\": \"The name of the subscription group\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"count\",\n            \"in\": \"path\",\n            \"description\": \"How many events to return for the request.\",\n            \"required\": true,\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          {\n            \"name\": \"embed\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"enum\": [\n              \"None\",\n              \"Content\",\n              \"Rich\",\n              \"Body\",\n              \"PrettyBody\",\n              \"TryHarder\"\n            ]\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/subscriptions/{stream}/{subscription}/ack/{messageid}\": {\n      \"post\": {\n        \"tags\": [\n          \"Subscriptions\"\n        ],\n        \"summary\": \"Acknowledge a single message\",\n        \"description\": \"Clients must acknowledge (or not acknowledge) messages in the competing consumer model. If the client fails to respond in the given timeout period, the message will be retried. You should use the `rel` links in the feed for acknowledgements not bookmark URIs as they are subject to change in future versions.\",\n        \"operationId\": \"acknowledgeSingleMessage\",\n        \"produces\": [\n          \"application/vnd.eventstore.competingatom+json\",\n          \"application/vnd.eventstore.competingatom+xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"stream\",\n            \"in\": \"path\",\n            \"description\": \"The stream the persistent subscription is on\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"subscription\",\n            \"in\": \"path\",\n            \"description\": \"The name of the subscription group\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"messageid\",\n            \"in\": \"path\",\n            \"description\": \"The id of the message that needs to be acked\",\n            \"required\": true,\n            \"type\": \"string\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"New persistant subscription\"\n          },\n          \"400\": {\n            \"description\": \"bad input parameter\"\n          }\n        }\n      }\n    },\n    \"/subscriptions/{stream}/{subscription}/ack\": {\n      \"post\": {\n        \"tags\": [\n          \"Subscriptions\"\n        ],\n        \"summary\": \"Acknowledge multiple messages\",\n        \"description\": \"Clients must acknowledge (or not acknowledge) messages in the competing consumer model. If the client fails to respond in the given timeout period, the message will be retried. You should use the `rel` links in the feed for acknowledgements not bookmark URIs as they are subject to change in future versions.\",\n        \"operationId\": \"acknowledgeMultipleMessages\",\n        \"produces\": [\n          \"application/vnd.eventstore.competingatom+json\",\n          \"application/vnd.eventstore.competingatom+xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"stream\",\n            \"in\": \"path\",\n            \"description\": \"The stream the persistent subscription is on\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"subscription\",\n            \"in\": \"path\",\n            \"description\": \"The name of the subscription group\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"ids\",\n            \"in\": \"query\",\n            \"description\": \"The ids of the messages that need to be acked separated by commas\",\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"New persistant subscription\"\n          },\n          \"400\": {\n            \"description\": \"bad input parameter\"\n          }\n        }\n      }\n    },\n    \"/subscriptions/{stream}/{subscription}/nack/{messageid}\": {\n      \"post\": {\n        \"tags\": [\n          \"Subscriptions\"\n        ],\n        \"summary\": \"Negative acknowledge a single message\",\n        \"description\": \"Clients must acknowledge (or not acknowledge) messages in the competing consumer model. If the client fails to respond in the given timeout period, the message will be retried. You should use the `rel` links in the feed for acknowledgements not bookmark URIs as they are subject to change in future versions.\",\n        \"operationId\": \"negativeAcknowledgeSingleMessage\",\n        \"produces\": [\n          \"application/vnd.eventstore.competingatom+json\",\n          \"application/vnd.eventstore.competingatom+xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"stream\",\n            \"in\": \"path\",\n            \"description\": \"The stream the persistent subscription is on\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"subscription\",\n            \"in\": \"path\",\n            \"description\": \"The name of the subscription group\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"messageid\",\n            \"in\": \"path\",\n            \"description\": \"The id of the message that needs to be nacked\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"action\",\n            \"in\": \"query\",\n            \"description\": \"<ul><li>**Park** - Don't retry the message, park it until a request is sent to reply the parked messages<li>**Retry** - Retry the message<li>**Skip** - Discard the message<li>**Stop** - Stop the subscription</ul>\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"enum\": [\n              \"Park\",\n              \"Retyr\",\n              \"Skip\",\n              \"Stop\"\n            ]\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"New persistant subscription\"\n          },\n          \"400\": {\n            \"description\": \"bad input parameter\"\n          }\n        }\n      }\n    },\n    \"/subscriptions/{stream}/{subscription}/nack\": {\n      \"post\": {\n        \"tags\": [\n          \"Subscriptions\"\n        ],\n        \"summary\": \"Negative acknowledge multiple messages\",\n        \"description\": \"Clients must acknowledge (or not acknowledge) messages in the competing consumer model. If the client fails to respond in the given timeout period, the message will be retried. You should use the `rel` links in the feed for acknowledgements not bookmark URIs as they are subject to change in future versions.\",\n        \"operationId\": \"negativeAcknowledgeMultipleMessages\",\n        \"produces\": [\n          \"application/vnd.eventstore.competingatom+json\",\n          \"application/vnd.eventstore.competingatom+xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"stream\",\n            \"in\": \"path\",\n            \"description\": \"The stream the persistent subscription is on\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"subscription\",\n            \"in\": \"path\",\n            \"description\": \"The name of the subscription group\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"ids\",\n            \"in\": \"query\",\n            \"description\": \"The ids of the messages that need to be nacked separated by commas\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"action\",\n            \"in\": \"query\",\n            \"description\": \"<ul><li>**Park** - Don't retry the message, park it until a request is sent to reply the parked messages<li>**Retry** - Retry the message<li>**Skip** - Discard the message<li>**Stop** - Stop the subscription</ul>\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"enum\": [\n              \"Park\",\n              \"Retry\",\n              \"Skip\",\n              \"Stop\"\n            ]\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"New persistant subscription\"\n          },\n          \"400\": {\n            \"description\": \"bad input parameter\"\n          }\n        }\n      }\n    },\n    \"/subscriptions/{stream}/{subscription}/replayParked\": {\n      \"post\": {\n        \"tags\": [\n          \"Subscriptions\"\n        ],\n        \"summary\": \"Replay any previously parked messages in a stream\",\n        \"description\": \"Replay any previously parked messages in a stream that were parked by a negative acknowledgement action.\",\n        \"operationId\": \"replayParkedMessages\",\n        \"produces\": [\n          \"application/vnd.eventstore.competingatom+json\",\n          \"application/vnd.eventstore.competingatom+xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"stream\",\n            \"in\": \"path\",\n            \"description\": \"The stream the persistent subscription is on\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"subscription\",\n            \"in\": \"path\",\n            \"description\": \"The name of the subscription group\",\n            \"required\": true,\n            \"type\": \"string\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/users\": {\n      \"get\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"summary\": \"Get all users\",\n        \"description\": \"Returns all users defined in Event Store.\",\n        \"operationId\": \"getUsers\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"404\": {\n            \"description\": \"Not found\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"summary\": \"Create a User\",\n        \"description\": \"Create a new user.\",\n        \"operationId\": \"PostUser\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"body\",\n            \"name\": \"userItem\",\n            \"description\": \"User to create\",\n            \"required\": false,\n            \"schema\": {\n              \"$ref\": \"#/definitions/UserItem\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"201\": {\n            \"description\": \"New user created\"\n          },\n          \"400\": {\n            \"description\": \"Bad request\"\n          }\n        }\n      }\n    },\n    \"/users/{login}\": {\n      \"get\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"summary\": \"Get user\",\n        \"description\": \"Returns the user currently authenticated with the API, or the user specified.\",\n        \"operationId\": \"getUser\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"login\",\n            \"in\": \"path\",\n            \"description\": \"The user passed to the API call.\",\n            \"required\": true,\n            \"type\": \"string\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"404\": {\n            \"description\": \"Not found\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"summary\": \"Update specified user\",\n        \"description\": \"Update the FullName of Groups of the specified user.\",\n        \"operationId\": \"PutUser\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"login\",\n            \"in\": \"path\",\n            \"description\": \"The user's name\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"in\": \"body\",\n            \"name\": \"userUpdateItem\",\n            \"description\": \"User to update\",\n            \"required\": false,\n            \"schema\": {\n              \"$ref\": \"#/definitions/UserUpdateItem\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"404\": {\n            \"description\": \"Not found\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"summary\": \"Deletes a user\",\n        \"description\": \"Delete specified user.\",\n        \"operationId\": \"DeleteUser\",\n        \"produces\": [\n          \"application/xml\",\n          \"application/json\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"login\",\n            \"in\": \"path\",\n            \"description\": \"The user's name\",\n            \"required\": true,\n            \"type\": \"string\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"User deleted\"\n          }\n        }\n      }\n    },\n    \"/users/{login}/command/enable\": {\n      \"put\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"summary\": \"Enable the specified user\",\n        \"description\": \"Enable the acount of the specified user.\",\n        \"operationId\": \"PostCommandEnable\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"login\",\n            \"in\": \"path\",\n            \"description\": \"The user's name\",\n            \"required\": true,\n            \"type\": \"string\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"404\": {\n            \"description\": \"Not found\"\n          }\n        }\n      }\n    },\n    \"/users/{login}/command/disable\": {\n      \"put\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"summary\": \"Disable the specified user\",\n        \"description\": \"Disable the acount of the specified user.\",\n        \"operationId\": \"PostCommandDisable\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"login\",\n            \"in\": \"path\",\n            \"description\": \"The user's name\",\n            \"required\": true,\n            \"type\": \"string\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"404\": {\n            \"description\": \"Not found\"\n          }\n        }\n      }\n    },\n    \"/users/{login}/command/reset-password\": {\n      \"post\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"summary\": \"Reset user password\",\n        \"description\": \"Reset the password of the specified user.\",\n        \"operationId\": \"PostCommandResetPassword\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"login\",\n            \"in\": \"path\",\n            \"description\": \"The user's name\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"in\": \"body\",\n            \"name\": \"newPassword\",\n            \"description\": \"The new password for the user\",\n            \"required\": true,\n            \"schema\": {\n              \"$ref\": \"#/definitions/PasswordResetItem\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"description\": \"Bad request\"\n          }\n        }\n      }\n    },\n    \"/users/{login}/command/change-password\": {\n      \"post\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"summary\": \"Change user password\",\n        \"description\": \"Change the password of the specified user.\",\n        \"operationId\": \"PostCommandChangePassword\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"login\",\n            \"in\": \"path\",\n            \"description\": \"The user's name\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"in\": \"body\",\n            \"name\": \"newPassword\",\n            \"description\": \"The new password for the user\",\n            \"required\": true,\n            \"schema\": {\n              \"$ref\": \"#/definitions/PasswordChangeItem\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"description\": \"Bad request\"\n          }\n        }\n      }\n    },\n    \"/projections/any\": {\n      \"get\": {\n        \"tags\": [\n          \"Projections\"\n        ],\n        \"summary\": \"Get all projections\",\n        \"description\": \"Returns all projections defined in Event Store.\",\n        \"operationId\": \"OnProjectionsGetAny\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"404\": {\n            \"description\": \"Not found\"\n          }\n        }\n      }\n    },\n    \"/projections/all-non-transient\": {\n      \"get\": {\n        \"tags\": [\n          \"Projections\"\n        ],\n        \"summary\": \"Get all non-transient projections\",\n        \"description\": \"Returns all non-transient projections defined in Event Store.\",\n        \"operationId\": \"OnProjectionsGetAllNonTransient\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"404\": {\n            \"description\": \"Not found\"\n          }\n        }\n      }\n    },\n    \"/projections/onetime\": {\n      \"get\": {\n        \"tags\": [\n          \"Projections\"\n        ],\n        \"summary\": \"Get all queries\",\n        \"description\": \"Returns all queries defined in Event Store.\",\n        \"operationId\": \"OnProjectionsGetOneTime\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"404\": {\n            \"description\": \"Not found\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"Projections\"\n        ],\n        \"summary\": \"Create a transient projection\",\n        \"description\": \"Create a new transient projection.\",\n        \"operationId\": \"OnProjectionsPostOneTime\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"Name of the projection\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"type\",\n            \"in\": \"query\",\n            \"description\": \"The projection type\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"enum\": [\n              \"JS\"\n            ]\n          },\n          {\n            \"name\": \"enabled\",\n            \"in\": \"query\",\n            \"description\": \"Is the projection enabled\",\n            \"required\": false,\n            \"type\": \"boolean\"\n          },\n          {\n            \"name\": \"checkpoints\",\n            \"in\": \"query\",\n            \"description\": \"Are checkpoints enabled\",\n            \"required\": false,\n            \"type\": \"boolean\"\n          },\n          {\n            \"name\": \"emit\",\n            \"in\": \"query\",\n            \"description\": \"Is emit enabled\",\n            \"required\": false,\n            \"type\": \"boolean\"\n          },\n          {\n            \"name\": \"trackemittedstreams\",\n            \"in\": \"query\",\n            \"description\": \"Should your projection create a separate stream and write any streams it emits to that stream.\",\n            \"required\": false,\n            \"type\": \"boolean\"\n          }\n        ],\n        \"responses\": {\n          \"201\": {\n            \"description\": \"New projection created\"\n          },\n          \"400\": {\n            \"description\": \"Bad request\"\n          }\n        }\n      }\n    },\n    \"/projections/continuous\": {\n      \"get\": {\n        \"tags\": [\n          \"Projections\"\n        ],\n        \"summary\": \"Get all continious projections\",\n        \"description\": \"Returns all continually running projections defined in Event Store.\",\n        \"operationId\": \"OnProjectionsGetContinuous\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"404\": {\n            \"description\": \"Not found\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"Projections\"\n        ],\n        \"summary\": \"Create a continious projection\",\n        \"description\": \"Create a new continious projection.\",\n        \"operationId\": \"OnProjectionsPostContinuous\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"Name of the projection\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"enabled\",\n            \"in\": \"query\",\n            \"description\": \"Is the projection enabled\",\n            \"required\": false,\n            \"type\": \"boolean\"\n          },\n          {\n            \"name\": \"checkpoints\",\n            \"in\": \"query\",\n            \"description\": \"Are checkpoints enabled\",\n            \"required\": false,\n            \"type\": \"boolean\"\n          },\n          {\n            \"name\": \"emit\",\n            \"in\": \"query\",\n            \"description\": \"Is emit enabled\",\n            \"required\": false,\n            \"type\": \"boolean\"\n          },\n          {\n            \"name\": \"type\",\n            \"in\": \"query\",\n            \"description\": \"The projection type\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"enum\": [\n              \"JS\"\n            ]\n          },\n          {\n            \"name\": \"trackemittedstreams\",\n            \"in\": \"query\",\n            \"description\": \"Should your projection create a separate stream and write any streams it emits to that stream.\",\n            \"required\": false,\n            \"type\": \"boolean\"\n          }\n        ],\n        \"responses\": {\n          \"201\": {\n            \"description\": \"New projection created\"\n          },\n          \"400\": {\n            \"description\": \"Bad request\"\n          }\n        }\n      }\n    },\n    \"/projections/read-events\": {\n      \"post\": {\n        \"tags\": [\n          \"Projections\"\n        ],\n        \"summary\": \"TBD\",\n        \"description\": \"TBD\",\n        \"operationId\": \"OnProjectionsReadEvents\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"404\": {\n            \"description\": \"Not found\"\n          }\n        }\n      }\n    },\n    \"/projections/transient\": {\n      \"get\": {\n        \"tags\": [\n          \"Projections\"\n        ],\n        \"summary\": \"Get all transient projections\",\n        \"description\": \"Returns all transient projections defined in Event Store.\",\n        \"operationId\": \"OnProjectionsGetTransient\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"404\": {\n            \"description\": \"Not found\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"Projections\"\n        ],\n        \"summary\": \"Create a transient projection\",\n        \"description\": \"Create a new transient projection.\",\n        \"operationId\": \"OnProjectionsPostTransient\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"Name of the projection\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"type\",\n            \"in\": \"query\",\n            \"description\": \"The projection type\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"enum\": [\n              \"JS\"\n            ]\n          },\n          {\n            \"name\": \"enabled\",\n            \"in\": \"query\",\n            \"description\": \"Is the projection enabled\",\n            \"required\": false,\n            \"type\": \"boolean\"\n          }\n        ],\n        \"responses\": {\n          \"201\": {\n            \"description\": \"New user created\"\n          },\n          \"400\": {\n            \"description\": \"Bad request\"\n          }\n        }\n      }\n    },\n    \"/projection/{name}/query\": {\n      \"get\": {\n        \"tags\": [\n          \"Projections\"\n        ],\n        \"summary\": \"Get projection definition\",\n        \"description\": \"Returns definition of the specified projection.\",\n        \"operationId\": \"OnProjectionQueryGet\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"The name of the projection\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"config\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"boolean\",\n            \"description\": \"Wether to return the projection definition config.\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"404\": {\n            \"description\": \"Not found\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"Projections\"\n        ],\n        \"summary\": \"Update projection definition\",\n        \"description\": \"Update the specified projection definition.\",\n        \"operationId\": \"OnProjectionQueryPut\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"The name of the projection\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"type\",\n            \"in\": \"query\",\n            \"description\": \"The projection type\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"enum\": [\n              \"JS\"\n            ]\n          },\n          {\n            \"name\": \"emit\",\n            \"in\": \"query\",\n            \"description\": \"Is emit enabled\",\n            \"required\": false,\n            \"type\": \"boolean\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"404\": {\n            \"description\": \"Not found\"\n          }\n        }\n      }\n    },\n    \"/projection/{name}/state\": {\n      \"get\": {\n        \"tags\": [\n          \"Projections\"\n        ],\n        \"summary\": \"Get the projection state\",\n        \"description\": \"Return the current state of the specified projection.\",\n        \"operationId\": \"OnProjectionStateGet\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"The name of the projection\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"partition\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"description\": \"The partition name in state\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"404\": {\n            \"description\": \"Not found\"\n          }\n        }\n      }\n    },\n    \"/projection/{name}/result\": {\n      \"get\": {\n        \"tags\": [\n          \"Projections\"\n        ],\n        \"summary\": \"Get result\",\n        \"description\": \"Get the final result of a projection.\",\n        \"operationId\": \"OnProjectionResultGet\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"The name of the projection\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"partition\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"description\": \"The partition name in state\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"404\": {\n            \"description\": \"Not found\"\n          }\n        }\n      }\n    },\n    \"/projection/{name}/statistics\": {\n      \"get\": {\n        \"tags\": [\n          \"Projections\"\n        ],\n        \"summary\": \"Get projection statistics\",\n        \"description\": \"Returns the statistics for a projection, such as how many events, the status etc.\",\n        \"operationId\": \"OnProjectionStatisticsGet\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"The name of the projection\",\n            \"required\": true,\n            \"type\": \"string\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"404\": {\n            \"description\": \"Not found\"\n          }\n        }\n      }\n    },\n    \"/projection/{name}/command/disable\": {\n      \"post\": {\n        \"tags\": [\n          \"Projections\"\n        ],\n        \"summary\": \"Disable projection\",\n        \"description\": \"Disable the specified projection.\",\n        \"operationId\": \"OnProjectionCommandDisable\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"The name of the projection\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"enableRunAs\",\n            \"in\": \"query\",\n            \"description\": \"Is enableRunAs enabled\",\n            \"required\": false,\n            \"type\": \"boolean\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"404\": {\n            \"description\": \"Not found\"\n          }\n        }\n      }\n    },\n    \"/projection/{name}/command/enable\": {\n      \"post\": {\n        \"tags\": [\n          \"Projections\"\n        ],\n        \"summary\": \"Enable projection\",\n        \"description\": \"Enable the specified projection.\",\n        \"operationId\": \"OnProjectionCommandEnable\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"The name of the projection\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"enableRunAs\",\n            \"in\": \"query\",\n            \"description\": \"Is enableRunAs enabled\",\n            \"required\": false,\n            \"type\": \"boolean\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"404\": {\n            \"description\": \"Not found\"\n          }\n        }\n      }\n    },\n    \"/projection/{name}/command/reset\": {\n      \"post\": {\n        \"tags\": [\n          \"Projections\"\n        ],\n        \"summary\": \"Reset projection\",\n        \"description\": \"Reset the specified projection.\",\n        \"operationId\": \"OnProjectionCommandReset\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"The name of the projection\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"enableRunAs\",\n            \"in\": \"query\",\n            \"description\": \"Is enableRunAs enabled\",\n            \"required\": false,\n            \"type\": \"boolean\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"404\": {\n            \"description\": \"Not found\"\n          }\n        }\n      }\n    },\n    \"/projection/{name}/command/abort\": {\n      \"post\": {\n        \"tags\": [\n          \"Projections\"\n        ],\n        \"summary\": \"Abort projection\",\n        \"description\": \"Abort the specified projection.\",\n        \"operationId\": \"OnProjectionCommandAbort\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"The name of the projection\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"enableRunAs\",\n            \"in\": \"query\",\n            \"description\": \"Is enableRunAs enabled\",\n            \"required\": false,\n            \"type\": \"boolean\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"404\": {\n            \"description\": \"Not found\"\n          }\n        }\n      }\n    },\n    \"/projection/{name}/config\": {\n      \"get\": {\n        \"tags\": [\n          \"Projections\"\n        ],\n        \"summary\": \"Get the config of a projection\",\n        \"description\": \"Returns the performance configuration of the specified projection.\",\n        \"operationId\": \"OnProjectionConfigGet\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"The name of the projection\",\n            \"required\": true,\n            \"type\": \"string\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"404\": {\n            \"description\": \"Not found\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"Projections\"\n        ],\n        \"summary\": \"Update the config of a projection\",\n        \"description\": \"Update the performance configuration of the specified projection.\",\n        \"operationId\": \"OnProjectionConfigPut\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"The name of the projection\",\n            \"required\": true,\n            \"type\": \"string\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"404\": {\n            \"description\": \"Not found\"\n          }\n        }\n      }\n    },\n    \"/projection/{name}\": {\n      \"get\": {\n        \"tags\": [\n          \"Projections\"\n        ],\n        \"summary\": \"Get a projection\",\n        \"description\": \"Returns a specific projection.\",\n        \"operationId\": \"OnProjectionStatusGet\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"The name of the projection\",\n            \"required\": true,\n            \"type\": \"string\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"404\": {\n            \"description\": \"Not found\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Projections\"\n        ],\n        \"summary\": \"Deletes a projection\",\n        \"description\": \"Deletes a projection\",\n        \"operationId\": \"OnProjectionDelete\",\n        \"produces\": [\n          \"application/xml\",\n          \"application/json\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"The projection to delete\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"deleteStateStream\",\n            \"in\": \"query\",\n            \"description\": \"TBD\",\n            \"required\": false,\n            \"type\": \"boolean\"\n          },\n          {\n            \"name\": \"deleteCheckpointStream\",\n            \"in\": \"query\",\n            \"description\": \"TBD\",\n            \"required\": false,\n            \"type\": \"boolean\"\n          },\n          {\n            \"name\": \"deleteEmittedStreams\",\n            \"in\": \"query\",\n            \"description\": \"TBD\",\n            \"required\": false,\n            \"type\": \"boolean\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Projection deleted\"\n          }\n        }\n      }\n    },\n    \"/stats\": {\n      \"get\": {\n        \"tags\": [\n          \"Stats\"\n        ],\n        \"summary\": \"Get all stats\",\n        \"description\": \"Returns all stats enabled for Event Store.\",\n        \"operationId\": \"OnGetFreshStats\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"404\": {\n            \"description\": \"Not found\"\n          }\n        }\n      }\n    },\n    \"/stats/replication\": {\n      \"get\": {\n        \"tags\": [\n          \"Stats\"\n        ],\n        \"summary\": \"Get replication stats\",\n        \"description\": \"Returns all replication stats for Event Store between the master and slave nodes.\",\n        \"operationId\": \"OnGetReplicationStats\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"404\": {\n            \"description\": \"Not found\"\n          }\n        }\n      }\n    },\n    \"/stats/tcp\": {\n      \"get\": {\n        \"tags\": [\n          \"Stats\"\n        ],\n        \"summary\": \"Get TCP connection stats\",\n        \"description\": \"Returns all TCP connection stats for Event Store.\",\n        \"operationId\": \"OnGetTcpConnectionStats\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"404\": {\n            \"description\": \"Not found\"\n          }\n        }\n      }\n    },\n    \"/stats/{statPath}\": {\n      \"get\": {\n        \"tags\": [\n          \"Stats\"\n        ],\n        \"summary\": \"Get stats sub path\",\n        \"description\": \"Returns the sub path of the Event Store statistics available.\",\n        \"operationId\": \"OnGetFreshStatsPath\",\n        \"produces\": [\n          \"application/json\",\n          \"application/xml\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"statPath\",\n            \"in\": \"path\",\n            \"description\": \"The stats sub path\",\n            \"required\": true,\n            \"type\": \"string\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"404\": {\n            \"description\": \"Not found\"\n          }\n        }\n      }\n    }\n  },\n  \"definitions\": {\n    \"UserItem\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"LoginName:\": {\n          \"type\": \"string\",\n          \"description\": \"The new users login name.\"\n        },\n        \"FullName\": {\n          \"type\": \"string\",\n          \"description\": \"The full name for the new user.\"\n        },\n        \"Groups\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"description\": \"The groups the new user is a member of.\"\n        },\n        \"Password\": {\n          \"type\": \"string\",\n          \"description\": \"The password for the new user.\"\n        }\n      },\n      \"example\": {\n        \"LoginName\": \"admin\",\n        \"FullName\": \"EventStore Admin\",\n        \"Groups\": [\n          \"Admin\",\n          \"DataScience\"\n        ],\n        \"Password\": \"aVerySecurePassword\"\n      }\n    },\n    \"UserUpdateItem\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"FullName\": {\n          \"type\": \"string\",\n          \"description\": \"The full name of the new user.\"\n        },\n        \"Groups\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"description\": \"The groups the new user should become a member of.\"\n        }\n      },\n      \"example\": {\n        \"FullName\": \"EventStore Admin\",\n        \"Groups\": [\n          \"Admin\",\n          \"DataScience\"\n        ]\n      }\n    },\n    \"PasswordResetItem\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"NewPassword\": {\n          \"type\": \"string\",\n          \"description\": \"The new password for the user\"\n        }\n      },\n      \"example\": {\n        \"NewPassword\": \"aNewSecurePassword\"\n      }\n    },\n    \"PasswordChangeItem\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"CurrentPassword\": {\n          \"type\": \"string\",\n          \"description\": \"The current password for the user\"\n        },\n        \"NewPassword\": {\n          \"type\": \"string\",\n          \"description\": \"The new password for the user\"\n        }\n      },\n      \"example\": {\n        \"CurrentPassword\": \"anOldSecurePassword\",\n        \"NewPassword\": \"aNewSecurePassword\"\n      }\n    },\n    \"StreamItem\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"ResolveLinkTos\": {\n          \"type\": \"boolean\",\n          \"description\": \"Whether to resolve link events\"\n        },\n        \"startFrom\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\",\n          \"description\": \"Which event position in the stream the subscription should start from\"\n        },\n        \"extraStatistics\": {\n          \"type\": \"boolean\",\n          \"description\": \"Whether to track latency statistics on this subscription\"\n        },\n        \"checkPointAfterMilliseconds\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\",\n          \"description\": \"The amount of time to try to checkpoint after\"\n        },\n        \"liveBufferSize\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\",\n          \"description\": \"The size of the buffer (in-memory) listening to live messages as they happen before paging occurs\"\n        },\n        \"readBatchSize\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\",\n          \"description\": \"The number of events to read per batch when reading the history\"\n        },\n        \"bufferSize\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\",\n          \"description\": \"The number of events to cache when paging through history\"\n        },\n        \"maxCheckPointCount\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\",\n          \"description\": \"The maximum number of messages not checkpointed before forcing a checkpoint\"\n        },\n        \"maxRetryCount\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\",\n          \"description\": \"The maximum number of retries (due to timeout) before a message is considered to be parked\"\n        },\n        \"maxSubscriberCount\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\",\n          \"description\": \"The maximum number of subscribers allowed\"\n        },\n        \"messageTimeoutMilliseconds\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\",\n          \"description\": \"The amount of time after which to consider a message as timedout and retried\"\n        },\n        \"minCheckPointCount\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\",\n          \"description\": \"The minimum number of messages to write to a checkpoint\"\n        },\n        \"namedConsumerStrategy\": {\n          \"type\": \"string\",\n          \"description\": \"The strategy to use for distributing events to client consumers\",\n          \"enum\": [\n            \"RoundRobin\",\n            \"DispatchToSingle\",\n            \"Pinned\"\n          ]\n        }\n      },\n      \"example\": {\n        \"minCheckPointCount\": 2,\n        \"startFrom\": 0,\n        \"ResolveLinkTos\": true,\n        \"readBatchSize\": 5,\n        \"namedConsumerStrategy\": \"RoundRobin\",\n        \"extraStatistics\": true,\n        \"maxRetryCount\": 7,\n        \"liveBufferSize\": 1,\n        \"messageTimeoutMilliseconds\": 3,\n        \"maxCheckPointCount\": 2,\n        \"maxSubscriberCount\": 9,\n        \"checkPointAfterMilliseconds\": 6,\n        \"bufferSize\": 5\n      }\n    },\n    \"StreamMetadataItem\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"eventId\": {\n          \"type\": \"string\",\n          \"description\": \"Alphanumeric ID\"\n        },\n        \"eventType\": {\n          \"type\": \"string\",\n          \"description\": \"The type of event\"\n        },\n        \"data\": {\n          \"$ref\": \"#/definitions/StreamMetadataItem_data\"\n        }\n      },\n      \"example\": {\n        \"eventId\": \"eventId\",\n        \"data\": {\n          \"readRole\": \"readRole\",\n          \"metaReadRole\": \"metaReadRole\"\n        },\n        \"eventType\": \"eventType\"\n      }\n    },\n    \"SubscriptionItem\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"ResolveLinkTos\": {\n          \"type\": \"boolean\",\n          \"description\": \"Whether to resolve link events\"\n        },\n        \"startFrom\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\",\n          \"description\": \"Which event position in the stream the subscription should start from\"\n        },\n        \"extraStatistics\": {\n          \"type\": \"boolean\",\n          \"description\": \"Whether to track latency statistics on this subscription\"\n        },\n        \"checkPointAfterMilliseconds\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\",\n          \"description\": \"The amount of time to try to checkpoint after\"\n        },\n        \"liveBufferSize\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\",\n          \"description\": \"The size of the buffer (in-memory) listening to live messages as they happen before paging occurs\"\n        },\n        \"readBatchSize\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\",\n          \"description\": \"The number of events to read per batch when reading the history\"\n        },\n        \"bufferSize\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\",\n          \"description\": \"The number of events to cache when paging through history\"\n        },\n        \"maxCheckPointCount\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\",\n          \"description\": \"The maximum number of messages not checkpointed before forcing a checkpoint\"\n        },\n        \"maxRetryCount\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\",\n          \"description\": \"The maximum number of retries (due to timeout) before a message is considered to be parked\"\n        },\n        \"maxSubscriberCount\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\",\n          \"description\": \"The maximum number of subscribers allowed\"\n        },\n        \"messageTimeoutMilliseconds\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\",\n          \"description\": \"The amount of time after which to consider a message as timedout and retried\"\n        },\n        \"minCheckPointCount\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\",\n          \"description\": \"The minimum number of messages to write to a checkpoint\"\n        },\n        \"namedConsumerStrategy\": {\n          \"type\": \"string\",\n          \"description\": \"The strategy to use for distributing events to client consumers\",\n          \"enum\": [\n            \"RoundRobin\",\n            \"DispatchToSingle\",\n            \"Pinned\"\n          ]\n        }\n      },\n      \"example\": {\n        \"minCheckPointCount\": 2,\n        \"startFrom\": 0,\n        \"ResolveLinkTos\": true,\n        \"readBatchSize\": 5,\n        \"namedConsumerStrategy\": \"RoundRobin\",\n        \"extraStatistics\": true,\n        \"maxRetryCount\": 7,\n        \"liveBufferSize\": 1,\n        \"messageTimeoutMilliseconds\": 3,\n        \"maxCheckPointCount\": 2,\n        \"maxSubscriberCount\": 9,\n        \"checkPointAfterMilliseconds\": 6,\n        \"bufferSize\": 5\n      }\n    },\n    \"StreamMetadataItem_data\": {\n      \"properties\": {\n        \"readRole\": {\n          \"type\": \"string\",\n          \"description\": \"The roles allowed to read the stream.\"\n        },\n        \"metaReadRole\": {\n          \"type\": \"string\",\n          \"description\": \"The roles allowed to read the stream metadata.\"\n        }\n      },\n      \"example\": {\n        \"readRole\": \"readRole\",\n        \"metaReadRole\": \"metaReadRole\"\n      }\n    }\n  },\n  \"tags\": [\n    {\n      \"name\": \"Streams\",\n      \"description\": \"Endpoints for Stream operations\",\n      \"externalDocs\": {\n        \"url\": \"http://docs.my-api.com/pet-operations.htm\"\n      }\n    },\n    {\n      \"name\": \"Subscriptions\",\n      \"description\": \"Endpoints for Subscription operations\",\n      \"externalDocs\": {\n        \"url\": \"http://docs.my-api.com/pet-operations.htm\"\n      }\n    },\n    {\n      \"name\": \"Users\",\n      \"description\": \"Endpoints for User operations\",\n      \"externalDocs\": {\n        \"url\": \"http://docs.my-api.com/pet-operations.htm\"\n      }\n    },\n    {\n      \"name\": \"Projections\",\n      \"description\": \"Endpoints for Projection operations\",\n      \"externalDocs\": {\n        \"url\": \"http://docs.my-api.com/pet-operations.htm\"\n      }\n    },\n    {\n      \"name\": \"Stats\",\n      \"description\": \"Endpoints for Statistics operations\",\n      \"externalDocs\": {\n        \"url\": \"http://docs.my-api.com/pet-operations.htm\"\n      }\n    }\n  ]\n}","tags":[],"children":[],"uid":"eventstore.org/HTTP API/4.0.2","htmlId":"eventstore_org_HTTP_API_4_0_2","name":"HTTP API","swagger":"2.0","schemes":["https"],"documentType":"RestApi","source":{"remote":{"path":"http-api/swagger.json","branch":"swagger-docfx","repo":"git@github.com:EventStore/docs.geteventstore.com.git"},"startLine":0,"endLine":0,"isExternal":false},"_docfxVersion":"2.31.0.0","_systemKeys":["uid","htmlId","name","conceptual","description","remarks","summary","documentation","children","documentType","source","swagger","info","host","basePath","schemes","consumes","produces","paths","definitions","parameters","responses","securityDefinitions","security","tags","externalDocs"],"_isSplittedByTag":true,"_lang":"csharp","_tocPath":"docs/toc.html","_rel":"../../../","_path":"docs/http-api/http-api/swagger.html","_key":"http-api/swagger.json","_tocRel":"../../toc.html","_tocKey":"~/toc.md","__global":{"classesInSubtitle":"Classes","structsInSubtitle":"Structs","interfacesInSubtitle":"Interfaces","enumsInSubtitle":"Enums","delegatesInSubtitle":"Delegates","constructorsInSubtitle":"Constructors","fieldsInSubtitle":"Fields","propertiesInSubtitle":"Properties","methodsInSubtitle":"Methods","eventsInSubtitle":"Events","operatorsInSubtitle":"Operators","eiisInSubtitle":"Explicit Interface Implementations","functionsInSubtitle":"Functions","membersInSubtitle":"Members","improveThisDoc":"Improve this Doc","viewSource":"View Source","inheritance":"Inheritance","inheritedMembers":"Inherited Members","namespace":"Namespace","assembly":"Assembly","syntax":"Syntax","overrides":"Overrides","implements":"Implements","remarks":"Remarks","examples":"Examples","seealso":"See Also","declaration":"Declaration","parameters":"Parameters","typeParameters":"Type Parameters","type":"Type","name":"Name","description":"Description","returns":"Returns","fieldValue":"Field Value","propertyValue":"Property Value","eventType":"Event Type","exceptions":"Exceptions","condition":"Condition","extensionMethods":"Extension Methods","note":"<h5>Note</h5>","warning":"<h5>Warning</h5>","tip":"<h5>Tip</h5>","important":"<h5>Important</h5>","caution":"<h5>Caution</h5>","_shared":{}}}