{"conceptual":"<!-- TODO: Moved, check -->\n<p sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"8\" sourceendlinenumber=\"8\">The Event Store Client API includes helper methods that use the HTTP API to allow you to manage projections. This document will describe the methods found in the <code>ProjectionsManager</code> class. All methods in this class are asynchronous.</p>\n<h2 id=\"methods\" sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"10\" sourceendlinenumber=\"10\">Methods</h2>\n<h3 id=\"enable-a-projection\" sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"12\" sourceendlinenumber=\"12\">Enable a Projection</h3>\n<p sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"14\" sourceendlinenumber=\"14\">Enables an existing projection by its name. You must have access to a projection to enable it.</p>\n<pre sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"16\" sourceendlinenumber=\"18\"><code class=\"lang-csharp\">public Task EnableAsync(string name, UserCredentials userCredentials = null)\n</code></pre><h3 id=\"disable-a-projection\" sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"20\" sourceendlinenumber=\"20\">Disable a Projection</h3>\n<p sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"22\" sourceendlinenumber=\"22\">Disables an existing projection by its name. You must have access to a projection to disable it.</p>\n<pre sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"24\" sourceendlinenumber=\"26\"><code class=\"lang-csharp\">public Task DisableAsync(string name, UserCredentials userCredentials = null)\n</code></pre><h3 id=\"abort-a-projection\" sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"28\" sourceendlinenumber=\"28\">Abort a Projection</h3>\n<p sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"30\" sourceendlinenumber=\"30\">Aborts an existing projection by its name. You must have access to a projection to abort it.</p>\n<pre sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"32\" sourceendlinenumber=\"34\"><code class=\"lang-csharp\">public Task AbortAsync(string name, UserCredentials userCredentials = null)\n</code></pre><h3 id=\"create-a-one-time-projection\" sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"36\" sourceendlinenumber=\"36\">Create a One-Time Projection</h3>\n<p sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"38\" sourceendlinenumber=\"38\">Creates a projection that will run until the end of the log and then stop. The query parameter contains the javascript you want created as a one time projection.</p>\n<pre sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"40\" sourceendlinenumber=\"42\"><code class=\"lang-csharp\">public Task CreateOneTimeAsync(string query, UserCredentials userCredentials = null)\n</code></pre><h3 id=\"create-a-continuous-projection\" sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"44\" sourceendlinenumber=\"44\">Create a Continuous Projection</h3>\n<p sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"46\" sourceendlinenumber=\"46\">Creates a projection that will run until the end of the log and then continue running. The query parameter contains the javascript you want created as a one time projection. Continuous projections have explicit names and you can enable or disable them via this name.</p>\n<pre sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"48\" sourceendlinenumber=\"50\"><code class=\"lang-csharp\">public Task CreateContinuousAsync(string name, string query, UserCredentials userCredentials = null)\n</code></pre><h3 id=\"list-all-projections\" sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"52\" sourceendlinenumber=\"52\">List all Projections</h3>\n<p sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"54\" sourceendlinenumber=\"54\">Returns a list of all the projections.</p>\n<pre sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"56\" sourceendlinenumber=\"58\"><code class=\"lang-csharp\">public Task&lt;List&lt;ProjectionDetails&gt;&gt; ListAllAsync(UserCredentials userCredentials = null)\n</code></pre><h3 id=\"list-one-time-projections\" sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"60\" sourceendlinenumber=\"60\">List One-Time Projections</h3>\n<p sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"62\" sourceendlinenumber=\"62\">Returns a list of all One-Time Projections.</p>\n<pre sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"64\" sourceendlinenumber=\"66\"><code class=\"lang-csharp\">public Task&lt;List&lt;ProjectionDetails&gt;&gt; ListOneTimeAsync(UserCredentials userCredentials = null)\n</code></pre><h3 id=\"get-statistics-on-projection\" sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"68\" sourceendlinenumber=\"68\">Get Statistics on Projection</h3>\n<p sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"70\" sourceendlinenumber=\"70\">Returns the statistics associated with a named projection.</p>\n<pre sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"72\" sourceendlinenumber=\"74\"><code class=\"lang-csharp\">public Task&lt;string&gt; GetStatisticsAsync(string name, UserCredentials userCredentials = null)\n</code></pre><h3 id=\"delete-projection\" sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"76\" sourceendlinenumber=\"76\">Delete Projection</h3>\n<p sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"78\" sourceendlinenumber=\"78\">Deletes a named projection. You must have access to a projection to delete it.</p>\n<pre sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"80\" sourceendlinenumber=\"82\"><code class=\"lang-csharp\">public Task DeleteAsync(string name, UserCredentials userCredentials = null)\n</code></pre><h3 id=\"get-state\" sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"84\" sourceendlinenumber=\"84\">Get State</h3>\n<p sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"86\" sourceendlinenumber=\"86\">Retrieves the state of the projection.</p>\n<pre sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"88\" sourceendlinenumber=\"90\"><code class=\"lang-csharp\">public Task&lt;string&gt; GetState(string name, UserCredentials userCredentials = null)\n</code></pre><h3 id=\"get-partition-state\" sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"92\" sourceendlinenumber=\"92\">Get Partition State</h3>\n<p sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"94\" sourceendlinenumber=\"94\">Retrieves the state of the projection via the given partition.</p>\n<pre sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"96\" sourceendlinenumber=\"98\"><code class=\"lang-csharp\">public Task&lt;string&gt; GetPartitionStateAsync(string name, string partition, UserCredentials userCredentials = null)\n</code></pre><h3 id=\"get-result\" sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"100\" sourceendlinenumber=\"100\">Get Result</h3>\n<p sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"102\" sourceendlinenumber=\"102\">Retrieves the result of the projection.</p>\n<pre sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"104\" sourceendlinenumber=\"106\"><code class=\"lang-csharp\">public Task&lt;string&gt; GetResult(string name, UserCredentials userCredentials = null)\n</code></pre><h3 id=\"get-partition-result\" sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"108\" sourceendlinenumber=\"108\">Get Partition Result</h3>\n<p sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"110\" sourceendlinenumber=\"110\">Retrieves the result of the projection via the given partition.</p>\n<pre sourcefile=\"dotnet-api/projections.md\" sourcestartlinenumber=\"112\" sourceendlinenumber=\"114\"><code class=\"lang-csharp\">public Task&lt;string&gt; GetPartitionResultAsync(string name, string partition, UserCredentials userCredentials = null)\n</code></pre>","type":"Conceptual","source":{"remote":{"path":"dotnet-api/projections.md","branch":"swagger-docfx","repo":"git@github.com:EventStore/docs.geteventstore.com.git"},"startLine":0,"endLine":0,"isExternal":false},"path":"dotnet-api/projections.md","documentation":{"remote":{"path":"dotnet-api/projections.md","branch":"swagger-docfx","repo":"git@github.com:EventStore/docs.geteventstore.com.git"},"startLine":0,"endLine":0,"isExternal":false},"_docfxVersion":"2.31.0.0","_systemKeys":["conceptual","type","source","path","documentation","title","rawTitle","wordCount"],"title":"Projections Management","rawTitle":"","section":".NET API","version":"4.0.2","wordCount":381,"_lang":"csharp","_tocPath":"docs/toc.html","_rel":"../../","_path":"docs/dotnet-api/projections.html","_key":"dotnet-api/projections.md","_tocRel":"../toc.html","_tocKey":"~/toc.md","__global":{"classesInSubtitle":"Classes","structsInSubtitle":"Structs","interfacesInSubtitle":"Interfaces","enumsInSubtitle":"Enums","delegatesInSubtitle":"Delegates","constructorsInSubtitle":"Constructors","fieldsInSubtitle":"Fields","propertiesInSubtitle":"Properties","methodsInSubtitle":"Methods","eventsInSubtitle":"Events","operatorsInSubtitle":"Operators","eiisInSubtitle":"Explicit Interface Implementations","functionsInSubtitle":"Functions","membersInSubtitle":"Members","improveThisDoc":"Improve this Doc","viewSource":"View Source","inheritance":"Inheritance","inheritedMembers":"Inherited Members","namespace":"Namespace","assembly":"Assembly","syntax":"Syntax","overrides":"Overrides","implements":"Implements","remarks":"Remarks","examples":"Examples","seealso":"See Also","declaration":"Declaration","parameters":"Parameters","typeParameters":"Type Parameters","type":"Type","name":"Name","description":"Description","returns":"Returns","fieldValue":"Field Value","propertyValue":"Property Value","eventType":"Event Type","exceptions":"Exceptions","condition":"Condition","extensionMethods":"Extension Methods","note":"<h5>Note</h5>","warning":"<h5>Warning</h5>","tip":"<h5>Tip</h5>","important":"<h5>Important</h5>","caution":"<h5>Caution</h5>","_shared":{}}}