{"conceptual":"\n<p sourcefile=\"projections/debugging.md\" sourcestartlinenumber=\"3\" sourceendlinenumber=\"3\">User projections you create in JavaScript have a bonus that debugging is easier via any browser that ships with debugging capabilities. The following screenshots show the use of Chrome, but we have tested debugging with all major browsers which includes Firefox, Microsoft Edge and Safari.</p>\n<h2 id=\"logging-from-within-a-projection\" sourcefile=\"projections/debugging.md\" sourcestartlinenumber=\"5\" sourceendlinenumber=\"5\">Logging from within a Projection</h2>\n<p sourcefile=\"projections/debugging.md\" sourcestartlinenumber=\"7\" sourceendlinenumber=\"7\">For debugging purposes, projections includes a log method which will, when called, send messages to the configured Event Store logger (the default is <code>NLog</code> and to a file as well as <code>stdout</code>).</p>\n<p sourcefile=\"projections/debugging.md\" sourcestartlinenumber=\"9\" sourceendlinenumber=\"9\">You might find printing out the structure of the event body for inspection useful.</p>\n<p sourcefile=\"projections/debugging.md\" sourcestartlinenumber=\"11\" sourceendlinenumber=\"11\">For example:</p>\n<pre sourcefile=\"projections/debugging.md\" sourcestartlinenumber=\"13\" sourceendlinenumber=\"20\"><code class=\"lang-bash\">fromStream(&#39;$stats-127.0.0.1:2113&#39;)\n.when({\n    $any: function(s,e){\n        log(JSON.stringify(e));\n    }\n})\n</code></pre><h2 id=\"starting-and-configuring-event-store-for-projections\" sourcefile=\"projections/debugging.md\" sourcestartlinenumber=\"22\" sourceendlinenumber=\"22\">Starting and Configuring Event Store for Projections</h2>\n<p sourcefile=\"projections/debugging.md\" sourcestartlinenumber=\"24\" sourceendlinenumber=\"24\">The following configuration starts Event Store with all the projection modes enabled (user and system defined) and uses an in memory database which is suitable for development purposes.</p>\n<pre sourcefile=\"projections/debugging.md\" sourcestartlinenumber=\"26\" sourceendlinenumber=\"28\"><code class=\"lang-powershell\">EventStore.ClusterNode.exe --run-projections=all --mem-db\n</code></pre><h2 id=\"creating-a-sample-projection-for-debugging-purposes\" sourcefile=\"projections/debugging.md\" sourcestartlinenumber=\"30\" sourceendlinenumber=\"30\">Creating a sample projection for debugging purposes</h2>\n<p sourcefile=\"projections/debugging.md\" sourcestartlinenumber=\"32\" sourceendlinenumber=\"32\">Filename: <em>stats-counter.json</em></p>\n<p sourcefile=\"projections/debugging.md\" sourcestartlinenumber=\"34\" sourceendlinenumber=\"34\">Contents:</p>\n<pre sourcefile=\"projections/debugging.md\" sourcestartlinenumber=\"36\" sourceendlinenumber=\"48\"><code class=\"lang-json\">fromStream(&#39;$stats-127.0.0.1:2113&#39;)\n.when({\n    $init: function(){\n        return {\n            count: 0\n        }\n    },\n    $any: function(s,e){\n        s.count += 1;\n    }\n})\n</code></pre><p sourcefile=\"projections/debugging.md\" sourcestartlinenumber=\"50\" sourceendlinenumber=\"50\">You create the projection by making a call to the API and providing it with the definition of the projection.</p>\n<pre sourcefile=\"projections/debugging.md\" sourcestartlinenumber=\"52\" sourceendlinenumber=\"54\"><code class=\"lang-bash\">curl -i -d@stats-counter.json http://localhost:2113/projections/continuous?name=stats-counter%26type=js%26enabled=true%26emit=true%26trackemittedstreams=true -u admin:changeit\n</code></pre><!-- TODO: Where are these images? -->\n<h2 id=\"debugging-your-first-projection\" sourcefile=\"projections/debugging.md\" sourcestartlinenumber=\"58\" sourceendlinenumber=\"58\">Debugging your first projection</h2>\n<p sourcefile=\"projections/debugging.md\" sourcestartlinenumber=\"60\" sourceendlinenumber=\"60\">Once the projection is running, open your browser and enable the developer tools. Once you have the developer tools open, visit your projection URL and you should see a button labelled <em>Debug</em>.</p>\n<p sourcefile=\"projections/debugging.md\" sourcestartlinenumber=\"62\" sourceendlinenumber=\"62\"><img src=\"/assets/projections_debugging_part_1.png\" alt=\"Projections Debugging Part 1\" sourcefile=\"projections/debugging.md\" sourcestartlinenumber=\"62\" sourceendlinenumber=\"62\"></p>\n<p sourcefile=\"projections/debugging.md\" sourcestartlinenumber=\"64\" sourceendlinenumber=\"64\">After clicking the projection &quot;Debug&quot; button, you will see the debugging interface with the definition of the projection and information about the events the projection is processing on the right hand side.</p>\n<p sourcefile=\"projections/debugging.md\" sourcestartlinenumber=\"66\" sourceendlinenumber=\"66\">At the top there are couple of buttons to take note of, specifically the <em>Run Step</em> and <em>Update</em> buttons. You use <em>Run Step</em> to step through the event waiting in the queue, placing you in projection debugging mode. The <em>Update</em> button provides you with a way to update the projection definition without having to go back to the projection itself and leave the context of the debugger.</p>\n<p sourcefile=\"projections/debugging.md\" sourcestartlinenumber=\"68\" sourceendlinenumber=\"68\"><img src=\"/assets/projections_debugging_part_2.png\" alt=\"Projections Debugging Part 2\" sourcefile=\"projections/debugging.md\" sourcestartlinenumber=\"68\" sourceendlinenumber=\"68\"></p>\n<p sourcefile=\"projections/debugging.md\" sourcestartlinenumber=\"70\" sourceendlinenumber=\"70\">If the <em>Run Step</em> button is not greyed out and you click it, you will see that you browser has hit a breakpoint.</p>\n<p sourcefile=\"projections/debugging.md\" sourcestartlinenumber=\"72\" sourceendlinenumber=\"72\"><img src=\"/assets/projections_debugging_part_3.png\" alt=\"Projections Debugging Part 3\" sourcefile=\"projections/debugging.md\" sourcestartlinenumber=\"72\" sourceendlinenumber=\"72\"></p>\n<p sourcefile=\"projections/debugging.md\" sourcestartlinenumber=\"74\" sourceendlinenumber=\"74\">You are now able to step through the projection, the important method to step into so that you can debug your projection is to step into the <code>handler(state, eventEnvelope)</code> method.</p>\n","type":"Conceptual","source":{"remote":{"path":"projections/debugging.md","branch":"swagger-docfx","repo":"git@github.com:EventStore/docs.geteventstore.com.git"},"startLine":0,"endLine":0,"isExternal":false},"path":"projections/debugging.md","documentation":{"remote":{"path":"projections/debugging.md","branch":"swagger-docfx","repo":"git@github.com:EventStore/docs.geteventstore.com.git"},"startLine":0,"endLine":0,"isExternal":false},"_docfxVersion":"2.31.0.0","_systemKeys":["conceptual","type","source","path","documentation","title","rawTitle","wordCount"],"title":"Debugging","rawTitle":"<h1 id=\"debugging\" sourcefile=\"projections/debugging.md\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">Debugging</h1>","wordCount":391,"_lang":"csharp","_tocPath":"docs/toc.html","_rel":"../../","_path":"docs/projections/debugging.html","_key":"projections/debugging.md","_tocRel":"../toc.html","_tocKey":"~/toc.md","__global":{"classesInSubtitle":"Classes","structsInSubtitle":"Structs","interfacesInSubtitle":"Interfaces","enumsInSubtitle":"Enums","delegatesInSubtitle":"Delegates","constructorsInSubtitle":"Constructors","fieldsInSubtitle":"Fields","propertiesInSubtitle":"Properties","methodsInSubtitle":"Methods","eventsInSubtitle":"Events","operatorsInSubtitle":"Operators","eiisInSubtitle":"Explicit Interface Implementations","functionsInSubtitle":"Functions","membersInSubtitle":"Members","improveThisDoc":"Improve this Doc","viewSource":"View Source","inheritance":"Inheritance","inheritedMembers":"Inherited Members","namespace":"Namespace","assembly":"Assembly","syntax":"Syntax","overrides":"Overrides","implements":"Implements","remarks":"Remarks","examples":"Examples","seealso":"See Also","declaration":"Declaration","parameters":"Parameters","typeParameters":"Type Parameters","type":"Type","name":"Name","description":"Description","returns":"Returns","fieldValue":"Field Value","propertyValue":"Property Value","eventType":"Event Type","exceptions":"Exceptions","condition":"Condition","extensionMethods":"Extension Methods","note":"<h5>Note</h5>","warning":"<h5>Warning</h5>","tip":"<h5>Tip</h5>","important":"<h5>Important</h5>","caution":"<h5>Caution</h5>","_shared":{}}}